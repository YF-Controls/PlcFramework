FUNCTION "_inRangeDatetime" : Bool
TITLE = Function:Compare datetime
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : cyanezf
FAMILY : Datetime
NAME : _inRangeDateTime
VERSION : 1.0
   VAR_INPUT 
      lower {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;   // Lower datime to compare
      in {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;   // Input datetime
      upper {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;   // Upper datetime to compare
      depthUpTo : USInt;   // 0=Nanos; 1=Seconds; 2=Minutes; 3=Hours; 4=Days; 5=Months; 6=Years (Other values means years)
   END_VAR

   VAR_TEMP 
      in_lower : Int;
      in_upper : Int;
      inRange : Bool;
   END_VAR

   VAR CONSTANT 
      A_LESS_THAN_B : Int := -1;
      A_EQUAL_TO_B : Int := 0;
      A_GREATER_THAN_B : Int := 1;
      DEPTH_UP_TO_0_ALL : USInt := 0;
      DEPTH_UP_TO_1_SECONDS : USInt := 1;
      DEPTH_UP_TO_2_MINUTES : USInt := 2;
      DEPTH_UP_TO_3_HOURS : USInt := 3;
      DEPTH_UP_TO_4_DAYS : USInt := 4;
      DEPTH_UP_TO_5_MONTHS : USInt := 5;
      DEPTH_UP_TO_6_YEARS : USInt := 6;
   END_VAR


BEGIN
	(*--
	
	# Log
	| version | date | author | description |
	|:-------:|:----:|:------:|:------------|
	| v1.0 | 2025-06-17 | cyanezf | First version |
	
	# Dependencies
	| Dependency |
	|:-----------|
	| _compareDatetime |
	  
	# Description
	This function checks if datetime `in` is in range between `lower`and `upper`. `(a >= lower and a <= upper)`.
	
	## Depth to up
	| usint | constant | description |
	|:-----:|:---------|:------------|
	| 0 | DEPTH_UP_TO_0_ALL | Comparison depth up to nanoseconds (all) |
	| 1 | DEPTH_UP_TO_1_SECONDS | Comparison depth up to seconds |
	| 2 | DEPTH_UP_TO_2_MINUTES | Comparison depth up to minutes |
	| 3 | DEPTH_UP_TO_3_HOURS | Comparison depth up to hours |
	| 4 | DEPTH_UP_TO_4_DAYS | Comparison depth up to days |
	| 5 | DEPTH_UP_TO_5_MONTHS | Comparison depth up to months |
	| 6 | DEPTH_UP_TO_6_YEARS | Comparison depth up to years |
	
	## Return
	| bool | description |
	|:---:|:------------|
	| 0 | datetime `a` is out of range |
	| 1 | datetime `a` is in range |
	
	#
	_Use [Markdown Live Preview](https://markdownlivepreview.com/) to watch this doc._
	--*)
	
	#in_lower := "_compareDatetime"(a:= #in, b:= #lower, depthUpTo:= #depthUpTo);
	#in_upper := "_compareDatetime"(a:= #in, b:= #upper, depthUpTo:= #depthUpTo);
	
	#inRange := (#in_lower = #A_EQUAL_TO_B OR #in_lower = #A_GREATER_THAN_B) AND (#in_upper = #A_EQUAL_TO_B OR #in_upper = #A_LESS_THAN_B);
	
	#_inRangeDatetime := #inRange;
	ENO := #inRange;
	
END_FUNCTION

